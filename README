ParG4_cluster
=============

Multi threaded code for geant4 simulations. For being used over the cluster.

This repo contains the source code that implements the simulation of a simple 
set-up of a LYSO scintillator crystal on a cluster, using multi threading to 
improve the performance of several events over a reduced amount of time.

The software used for this project and their respective versions are:

-ROOT : Version   5.34/02
-GEANT4: Version   9.5.1
-TOP-C: Version 2.5.2
-GCC: Version 4.4.6
-MARSHALGEN: Version 1.0

The original LYSO source file structure was like this:

+- LYSO/
  +- src/
    +- LYSOEventAction.cc
    +- LYSOGeometry.cc
    +- LYSOHit.cc
    +- LYSOPhysicsList.cc
    +- LYSOPrimaryGeneratorAction.cc
    +- LYSORunAction.cc
    +- LYSOSD.cc
  +- include/
    +- LYSOEventAction.hh
    +- LYSOGeometry.hh
    +- LYSOHit.hh
    +- LYSOPhysicsList.hh
    +- LYSOPrimaryGeneratorAction.hh
    +- LYSORunAction.hh
    +- LYSOSD.hh
  +- CMakeLists.txt
  +- vis.mac
  +- LYSO.cc
  
Note that in the original version the compilation of the project were made
with CMake, so there were no need for a Makefile.

Now, the multi threaded version file structure is like the following:

+- LYSO/
  +- src/
    +- G4MTGetTid.cc (*)
    +- LYSOEventAction.cc
    +- LYSOGeometry.cc
    +- LYSOHit.cc
    +- LYSOPhysicsList.cc
    +- LYSOPrimaryGeneratorAction.cc
    +- LYSORunAction.cc (*)
    +- LYSOSD.cc
    +- ParRunManager.cc (*)
  +- include/
    +- G4MTGetTid.hh (*)
    +- GNUmakefile (*)
    +- LYSOEventAction.hh
    +- LYSOGeometry.hh
    +- LYSOHit.hh (*)
    +- LYSOPhysicsList.hh
    +- LYSOPrimaryGeneratorAction.hh
    +- LYSORunAction.hh 
    +- LYSOSD.hh
    +- LYSOHit.msh (*)
    +- MarshaledG4HCofThisEvent.h (*)
    +- MarshaledG4String.h (*)
    +- MarshaledG4THitsCollection.h (*)
    +- MarshaledG4VHitsCollection.h (*)
    +- MarshaledLYSOHit.h (*)
    +- MarshaledObj.h (*)
    +- ParRunManager.hh (*)
  +- AnnotatedFiles/ (*)
    +- G4HCofThisEvent.hh
    +- G4String.hh
    +- G4THitsCollection.hh
    +- G4VHitsCollection.hh
    +- G4HCofThisEvent.msh
    +- G4String.msh
    +- G4THitsCollection.msh
    +- G4VHitsCollection.msh
    +- MarshaledG4HCofThisEvent.h
    +- MarshaledG4String.h
    +- MarshaledG4THitsCollection.h
    +- MarshaledG4VHitsCollection.h
  +- GNUmakefile (*)
  +- ParGNUmakefile (*)
  +- procgroup (*)
  +- vis.mac
  +- LYSO.cc (*)
  +- ParTopC.icc (*)
  
The differences with the original version are the ones marked with the '(*)'
(the directory 'AnnotatedFiles' and its content is whole new, so I just marked 
the directory instead of all the files in it). The explanation for these 
differences will be explained below.

The usual geant4 simulations needs the following classes to create a proper program:

-DetectorConstruction
-PhysicsList
-PrimaryGeneratorAction
-EventAction
-RunAction

In the case that the simulation require a more specific or realistic aquisition of data, 
the usual way to do this is to use (in conjuction with the previous ones) the 
'SensitiveDetector' class. When using this class, a more precise control its achieved 
by using the classes definig and storing the "hits". In our case, the chosen class is 'Hits'.

The task of parallelization itself is performed by TOP-C, so the first modification needed 
in order to port you application to a multi-thread version is to include the file 'ParTopC.icc', 
and include it on your main file (in this case is 'LYSO.cc').

The second important modification is to add  file named 'procgroup'. This file is used to
determine the number of threads that will be used in the simulation. For our case, as we will be
always working on the same cluster, is enough to copy the 'procgroup' file on this project to 
any other simulation using multi-thread.


